/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                 TEMPUS Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                     Default config options for all compute environments
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                                                   = null
    genome                                                  = "GRCh38"
    seq_center                                              = "MSKCC_IGO"
    seq_library                                             = "Av1"
    downsampling                                            = true
    seq_platform                                            = "ILLUMINA"

    // References
    genomes                                                 = [:]
    refs_dir                                                = "/Users/blancoj/Documents/MSKCC/CMOinnovation/REF"
    read_length                                             = 100
    genome_base                                             = "${refs_dir}/${params.genome}"
    ensembl_version                                         = 112
    igenomes_ignore                                         = true

    // MultiQC options
    multiqc_logo                                            = null
    multiqc_title                                           = null
    multiqc_config                                          = null
    max_multiqc_email_size                                  = '25.MB'
    multiqc_methods_description                             = null

    // More genome options
    fai                                                     = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.fa.fai"
    bwa2                                                    = "${params.genome_base}/bwa2"
    fasta                                                   = "${params.genome_base}/ensembl/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.fa"
    banding                                                 = "${params.genome_base}/mappability/Homo_sapiens.${params.genome}.${params.ensembl_version}.all.banding.tsv"

    // Boilerplate options
    help                                                    = false
    email                                                   = null
    outdir                                                  = null
    version                                                 = false
    hook_url                                                = null
    help_full                                               = false
    show_hidden                                             = false
    email_on_fail                                           = null
    plaintext_email                                         = false
    monochrome_logs                                         = false
    publish_dir_mode                                        = 'copy'
    config_profile_url                                      = null
    custom_config_base                                      = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    trace_report_suffix                                     = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name                                     = null
    custom_config_version                                   = 'master'
    config_profile_contact                                  = null
    config_profile_description                              = null
    pipelines_testdata_base_path                            = 'https://raw.githubusercontent.com/nf-core/test-datasets/'

    // Config options
    custom_config_base                                      = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_url                                      = null
    config_profile_name                                     = null
    custom_config_version                                   = 'master'
    config_profile_contact                                  = null
    config_profile_description                              = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                                              = '64.GB'
    max_cpus                                                = 12
    max_time                                                = '24.h'

    // Schema validation default options
    validate_params                                         = true
    validationLenientMode                                   = false
    validationShowHiddenParams                              = false
    validationSchemaIgnoreParams                            = 'genomes,igenome_base,monochromeLogs'
    validationFailUnrecognisedParams                        = false

    // nf-validation warning bug
    monochromeLogs                                          = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes                                          = true
        cleanup                                             = false
        process.beforeScript                                = 'echo $HOSTNAME'
        nextflow.enable.configProcessNamesValidation        = true
    }
    conda {
        conda.enabled                                       = true
        conda.channels                                      = ['conda-forge', 'bioconda']
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = false
        singularity.enabled                                 = false
        charliecloud.enabled                                = false
    }
    mamba {
        conda.enabled                                       = true
        conda.useMamba                                      = true
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = false
        singularity.enabled                                 = false
        charliecloud.enabled                                = false
    }
    docker {
        conda.enabled                                       = false
        docker.enabled                                      = true
        podman.enabled                                      = false
        shifter.enabled                                     = false
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64 -v /juno/cmo/bergerlab/blancoj/TMPDIR' // /Users/Shared/TMPDIR:/tmp
        apptainer.enabled                                   = false
        singularity.enabled                                 = false
        charliecloud.enabled                                = false
    }
    arm {
        docker.runOptions                                   = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        executor                                            = 'lsf'
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        singularity.enabled                                 = true
        charliecloud.enabled                                = false
        singularity.cacheDir                                = "/juno/cmo/bergerlab/blancoj/.TOOLS/snglty/.singularity/cache"
        singularity.autoMounts                              = true
        singularity.runOptions                              = "-B $TMPDIR"
        singularity.pullTimeout                             = '60m'

        apptainer.enabled                                   = false

        process {
            executor                                        = 'lsf'
            maxRetries                                      = 3
            errorStrategy                                   = 'retry'
            clusterOptions                                  = '-R "select[mem>16] rusage[mem=16]"'
        }
        
        executor {
            name                                            = 'lsf'
            queue                                           = 'default'
            queueSize                                       = 96
            pollInterval                                    = '10 sec'
            perJobMemLimit                                  = true
            submitRateLimit                                 = '10 sec'
        }
    }
    podman {
        conda.enabled                                       = false
        podman.enabled                                      = true
        docker.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = false
        singularity.enabled                                 = false
        charliecloud.enabled                                = false
    }
    shifter {
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = true
        apptainer.enabled                                   = false
        singularity.enabled                                 = false
        charliecloud.enabled                                = false
    }
    charliecloud {
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = false
        singularity.enabled                                 = false
        charliecloud.enabled                                = true
    }
    apptainer {
        conda.enabled                                       = false
        docker.enabled                                      = false
        podman.enabled                                      = false
        shifter.enabled                                     = false
        apptainer.enabled                                   = true
        singularity.enabled                                 = false
        apptainer.autoMounts                                = true
        charliecloud.enabled                                = false
    }
    wave {
        wave.freeze                                         = true
        wave.enabled                                        = true
        wave.strategy                                       = 'conda,container'
        apptainer.ociAutoPull                               = true
        singularity.ociAutoPull                             = true
    }
    gitpod {
        executor.name                                       = 'local'
        executor.cpus                                       = 4
        executor.memory                                     = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
podman.registry                                             = 'quay.io'
apptainer.registry                                          = 'quay.io'
singularity.registry                                        = 'quay.io'
charliecloud.registry                                       = 'quay.io'

// Load igenomes.config if required
includeConfig !params.igenomes_ignore ? 'conf/igenomes.config' : 'conf/igenomes_ignored.config'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    R_PROFILE_USER                                          = "/.Rprofile"
    R_ENVIRON_USER                                          = "/.Renviron"
    JULIA_DEPOT_PATH                                        = "/usr/local/share/julia"
    PYTHONNOUSERSITE                                        = 1
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name                                                    = 'jblancoheredia/tempus'
    contributors                                            = [
        [
            name: 'Juan Blanco-Heredia',
            affiliation: 'Memorial Sloan Kettering Cancer Center',
            email: 'blancoj@mskcc.org',
            github: '',
            contribution: ['author', 'maintainer'], // List of contribution types ( or 'contributor')
            orcid: ''
        ],
    ]
    homePage                                                = 'https://github.com/jblancoheredia/tempus'
    description                                             = """Telomere Evaluation for Mechanisms of Premature Uncapping & Senescence"""
    mainScript                                              = 'main.nf'
    defaultBranch                                           = 'main'
    nextflowVersion                                         = '!>=24.04.2'
    version                                                 = '0.0.0'
    doi                                                     = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run jblancoheredia/tempus -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
